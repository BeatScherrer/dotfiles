{
   "colors": {
      "activityBarBadge.background": "#007acc",
      "editor.background": "#DDDDDD",
      "editor.foreground": "#4e4e4e",
      "sideBarTitle.foreground": "#bbbbbb"
   },
   "name": "gravel-pit-light",
   "tokenColors": [
      {
         "name": "Comment",
         "scope": [
            "comment",
            "punctuation.definition.comment"
         ],
         "settings": {
            "fontStyle": "italic",
            "foreground": "#8a8a8a"
         }
      },
      {
         "name": "String",
         "scope": [
            "string"
         ],
         "settings": {
            "foreground": "#56fff1"
         }
      },
      {
         "name": "Punctuation",
         "scope": [
            "punctuation.section",
            "punctuation.terminator.statement",
            "punctuation.definition.parameters",
            "punctuation.definition.dictionary",
            "punctuation.separator.dot-access",
            "punctuation.separator.pointer-access",
            "punctuation.definition.tag",
            "punctuation.definition.variable.powershell",
            "punctuation.terminator"
         ],
         "settings": {
            "foreground": "#beaf91"
         }
      },
      {
         "name": "Operators",
         "scope": [
            "keyword.operator"
         ],
         "settings": {
            "foreground": "#ff5e5e"
         }
      },
      {
         "name": "keywords",
         "scope": [
            "storage.type",
            "support.type.property-name.json.comments",
            "meta.structure.dictionary.json",
            "markup.heading"
         ],
         "settings": {
            "foreground": "#ff5e5e"
         }
      },
      {
         "name": "Storage modifier",
         "scope": [
            "storage.modifier",
            "storage.type.modifier"
         ],
         "settings": {
            "foreground": "#beaf91"
         }
      },
      {
         "name": "Preprocessor",
         "scope": [
            "meta.preprocessor",
            "keyword.control.directive.conditional",
            "keyword.control.directive.define",
            "keyword.control.directive.include",
            "keyword.other.using.directive.cpp",
            "keyword.other.package.java",
            "markup.list.unnumbered",
            "entity.name.tag"
         ],
         "settings": {
            "foreground": "#ff5e5e"
         }
      },
      {
         "name": "test",
         "scope": [
            "entity.name.function.preprocessor",
            "meta.preprocessor.macro"
         ],
         "settings": {
            "fontStyle": "bold",
            "foreground": "#beaf91"
         }
      },
      {
         "name": "includes",
         "scope": [
            "string.quoted.other.lt-gt.include.cpp",
            "string.quoted.double.include"
         ],
         "settings": {
            "foreground": "#56fff1"
         }
      },
      {
         "name": "Function Call",
         "scope": [
            "support.function.powershell",
            "entity.name.function.call",
            "entity.name.function.member",
            "support.function.builtin",
            "meta.function-call",
            "markup.italic"
         ],
         "settings": {
            "foreground": "#6699cc"
         }
      },
      {
         "name": "Methods",
         "scope": [
            "entity.name.function.definition",
            "entity.name.function.java",
            "markup.bold"
         ],
         "settings": {
            "foreground": "#589c69"
         }
      },
      {
         "name": "Function argument",
         "scope": [
            "variable.parameter",
            "entity.other.attribute-name"
         ],
         "settings": {
            "foreground": "#ff9035"
         }
      },
      {
         "name": "Class and Struct",
         "scope": [
            "entity.name.type.class",
            "entity.name.type.struct",
            "entity.name.function.definition.special.constructor"
         ],
         "settings": {
            "foreground": "#589c69"
         }
      },
      {
         "name": "Member variables",
         "scope": [
            "variable.other.property.cpp",
            "variable.other.object.access.cpp",
            "variable.other.object.property",
            "meta.attribute"
         ],
         "settings": {
            "foreground": "#85f8a2"
         }
      },
      {
         "name": "Class Access Modifiers",
         "scope": [
            "storage.type.modifier",
            "storage.modifier.specifier.functional"
         ],
         "settings": {
            "foreground": "#beaf91"
         }
      },
      {
         "name": "Inherited",
         "scope": [
            "entity.name.type.inherited"
         ],
         "settings": {
            "fontStyle": "italic",
            "foreground": "#85f8a2"
         }
      },
      {
         "name": "Namespace",
         "scope": [
            "entity.name.namespace",
            "entity.name.scope-resolution",
            "punctuation.separator.namespace.access"
         ],
         "settings": {
            "foreground": "#beaf91"
         }
      },
      {
         "name": "variables",
         "scope": [
            "variable"
         ],
         "settings": {
            "foreground": "#000000"
         }
      },
      {
         "name": "Control Keywords",
         "scope": [
            "keyword.control",
            "constant.language.NULL"
         ],
         "settings": {
            "foreground": "#ff5e5e"
         }
      },
      {
         "name": "Template",
         "scope": [
            "storage.type.template"
         ],
         "settings": {
            "foreground": "#d477ff"
         }
      },
      {
         "name": "Constants",
         "scope": [
            "constant.language",
            "variable.language.this.java"
         ],
         "settings": {
            "foreground": "#aa5e5e"
         }
      },
      {
         "name": "test",
         "scope": [ ],
         "settings": {
            "foreground": "#ffffff"
         }
      }
   ],
   "type": "light"
}
