{
	"messages": [
		"Testing Clang binary: {0}",
		"Bad Clang binary (\"-v\" returns non-zero): {0}",
		"Bad Clang binary {0} -v output: {1}",
		"Testing GCC binary: {0}",
		"Getting GCC version for {0}",
		"Bad GCC binary (\"-v\" returns non-zero): {0}",
		"Bad GCC binary {0} -v output: {1}",
		"Detected GCC compiler: {0}",
		"Bad mingw32-make binary (\"-v\" returns non-zero): {0}",
		"Testing Clang binary: {0}",
		"Getting Clang version for {0}",
		"Detected Clang compiler: {0}",
		"Skipping scan of not existing path {0}",
		"Scanning directory {0} for compilers",
		"Failed to scan {0} by exception: {1}",
		"Checking file for compiler features: {0}",
		"Failed to check binary {0} by exception: {1}",
		"Failed to scan a kit file",
		"Found {0} kits in directory {1}",
		"Error running:{0} with args:{1}\nOutput are:\n{2}\nBat content are:\n{3}",
		"Error parsing environment variable: {0}",
		"Error running:{0} with args:{1}\nCannot find INCLUDE within:\n{2}\nBat content are:\n{3}",
		"OK running {0} {1}, env vars: {2}",
		"Error parsing environment variable: {0}",
		"OK running {0}, env vars: {1}",
		"Checking for kit: {0}",
		"Checking {0}",
		"Detected VsKit for version",
		"Generator Present: {0}",
		"Selected Preferred Generator Name: {0} {1}",
		"Clang {0} {1} with {2} ({3})",
		"Scanning for Kits on system",
		"Scanning for kits",
		"Scanning for CMake kits...",
		"Found Kit: {0}",
		"Detected kits definition version change from {0} to {1}. Silently scanning for kits.",
		"Kit for toolchain file {0}",
		"Using compilers: {0}",
		"Using compilers for {0} ({1} architecture)",
		"Using compilers: {0}",
		"Search for compilers on this computer",
		"Unspecified (Let CMake guess what compilers and environment to use)",
		"Not reading non-existent kits file: {0}",
		"Reading kits file {0}",
		"Failed to parse {0}: {1}",
		"Invalid kit contents {0} ({1}):",
		"Successfully loaded {0} kits from {1}",
		"Clean not needed: No prior Kit selected",
		"Need clean: Kit changed"
	],
	"keys": [
		"testing.clang.binary",
		"bad.clang.binary",
		"bad.clang.binary.output",
		"testing.gcc.binary",
		"getting.gcc.version",
		"bad.gcc.binary",
		"bad.gcc.binary.output",
		"detected.gcc.compiler",
		"bad.mingw32-make.binary",
		"testing.clang.binary",
		"getting.clang.version",
		"detected.clang.compiler",
		"skipping.scan.of.not.existing.path",
		"scanning.directory.for.compilers",
		"failed.to.scan",
		"checking.file.for.compiler.features",
		"filed.to.check.binary",
		"failed.to.scan.kit",
		"founds.kits.in.directory",
		"script.run.error",
		"error.parsing.environment",
		"script.run.error.check",
		"ok.running",
		"error.parsing.environment",
		"ok.running",
		"checking.for.kit",
		"checking",
		"detected.kit.for.version",
		"generator.present",
		"selected.preferred.generator.name",
		{
			"key": "clang.for.vsmsvc",
			"comment": [
				"Clang should stay at the beginning of the string as it is used in UI sorting"
			]
		},
		"scanning.for.kits.on.system",
		"scanning.for.kits",
		"scanning.for.cmake.kits",
		"found.kit",
		"silent.kits.rescan",
		"kit.for.toolchain.file",
		"using.compilers",
		"using.compilers.for",
		"using.compilers",
		"search.for.compilers",
		"unspecified.let.cmake.guess",
		"not.reading.nonexistent.kit",
		"reading.kits.file",
		"failed.to.parse",
		"invalid.file.error",
		"successfully.loaded.kits",
		"clean.not.needed",
		"clean.needed"
	],
	"filePath": "src\\kit"
}